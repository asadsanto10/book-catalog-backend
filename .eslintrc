{
	"env": {
		"node": true,
		"es6": true,
		"commonjs": true
	},
	"extends": [
		"eslint:recommended",
		"airbnb-base",
		"airbnb-typescript/base",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:prettier/recommended",
		"plugin:import/recommended"
	],
	// Specifying Parser
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"tsconfigRootDir": ".",
		"project": ["./tsconfig.json"]
	},
	// Configuring third-party plugins
	"plugins": [
		// "react",
		"@typescript-eslint",
		"import"
	],
	// Resolve imports
	"settings": {
		"import/resolver": {
			"typescript": {
				"project": "./tsconfig.json"
			}
		}
	},
	"rules": {
		"no-unused-vars": "warn",
		"@typescript-eslint/explicit-function-return-type": "warn",
		"@typescript-eslint/no-misused-promises": "off",
		"@typescript-eslint/no-unsafe-argument": "off",
		"@typescript-eslint/restrict-template-expressions": "off",
		// //////////
		"import/prefer-default-export": 0,
		"no-console": "warn",
		"no-undef": 0,
		"no-new": 0,
		"no-underscore-dangle": "off",
		"import/no-extraneous-dependencies": 0,
		"linebreak-style": "off",
		// Disallow the `any` type.
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/ban-types": [
			"error",
			{
				"extendDefaults": true,
				"types": {
					"{}": false
				}
			}
		],
		// Enforce the use of the shorthand syntax.
		"object-shorthand": "error",

		// Configure prettier
		"prettier/prettier": [
			"error",
			{
				"indentStyle": "space",
				"useTabs": true,
				"trailingComma": "es5",
				"singleQuote": true,
				"printWidth": 100,
				"tabWidth": 2,
				"semi": true,
				"endOfLine": "auto"
			}
		]
	}
}
